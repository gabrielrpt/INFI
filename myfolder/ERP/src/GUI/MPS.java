/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;

/**
 *
 * @author gabri
 */
public class MPS extends javax.swing.JFrame {

    /**
     * Creates new form MPS
     */
    private int lastTableDay = 5;
    private DefaultTableModel model;
    public MPS() {
        initComponents();
        Toolkit toolkit = getToolkit();
        Dimension size= toolkit.getScreenSize();
       // setBackground(new Color(0,0,0,0));
        setLocation(size.width/2 - getWidth()/2,size.height/2-getHeight()/2);
        currentDate();
    }
   public void currentDate(){
        Calendar cal= new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int year= cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);
       
        jLabel6.setText(day+"/"+(month+1)+"/" + year);
    }

    private void addNewDayColumn() {
        lastTableDay++;
        String newColumnName = "Day " + lastTableDay;
        model.addColumn(newColumnName);
        for (int i = 0; i < model.getRowCount(); i++) {
            model.setValueAt(null, i, model.getColumnCount() - 1);
        }
        jTable3.getColumnModel().getColumn(model.getColumnCount() - 1).setPreferredWidth(80);
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 300));
        setPreferredSize(new java.awt.Dimension(925, 551));
        setResizable(false);
        getContentPane().setLayout(null);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/images/340.png"))); // NOI18N
        jButton1.setText("Close Window");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(340, 460, 220, 30);

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 36)); // NOI18N
        jLabel5.setText("Master Production Schedule");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(220, 60, 562, 43);

        jLabel6.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/images/png-clipart-computer-icons-calendar-date-calendrier-text-calendar.png"))); // NOI18N
        jLabel6.setText("jLabel6");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(760, 80, 100, 16);

        model = new DefaultTableModel(
            new Object [][] {
                {"P1", null, null, null, null, null},
                {"P2", null, null, null, null, null},
                {"P3", null, null, null, null, null},
                {"P4", null, null, null, null, null},
                {"P5", null, null, null, null, null},
                {"P6", null, null, null, null, null},
                {"P7", null, null, null, null, null},
                {"P8", null, null, null, null, null},
                {"P9", null, null, null, null, null},
                {"W1 Capacity", null, null, null, null, null},
                {"W2 Capacity", null, null, null, null, null}
            },
            new String [] {
                "", "Day 1", "Day 2", "Day 3", "Day 4", "Day 5"
            }
        );
        jTable3.setModel(model);
        jTable3.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jTable3.setGridColor(new java.awt.Color(0, 0, 0));
        jTable3.setRowHeight(25);
        jTable3.setShowGrid(true);
        jTable3.setShowHorizontalLines(true);

        for (int i = 0; i < jTable3.getColumnCount(); i++) {
            jTable3.getColumnModel().getColumn(i).setPreferredWidth(87); // Set each column's preferred width
        }

        jScrollPane3.setViewportView(jTable3);
        jScrollPane3.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);  // Enable horizontal scroll bar

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(200, 140, 540, 300);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/images/colorkit (2).png"))); // NOI18N
        jLabel7.setText("jLabel7");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(0, 0, 1240, 750);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    public void updateTable(Map<Integer, String> productionSchedule) {
        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
        for (Map.Entry<Integer, String> entry : productionSchedule.entrySet()) {
            int day = entry.getKey();
            String[] pieceInfo = entry.getValue().split(" ");
            String pieceType = pieceInfo[0];
            String quantity = pieceInfo[1];
            while(day > lastTableDay) {
                addNewDayColumn();
            }
            System.out.println("Piece: " + pieceType + " Quantity: " + quantity + " Day: " + day);
            for (int i = 0; i < model.getRowCount(); i++) {
                if (model.getValueAt(i, 0).equals(pieceType)) {
                    for (int j = 1; j < model.getColumnCount(); j++) {
                        if (model.getColumnName(j).equals("Day " + day)) {
                            model.setValueAt(quantity, i, j);
                            break;
                        }
                    }
                }
            }
        }
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MPS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MPS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MPS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MPS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MPS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables
}
